name: "DEV - Test, Build and Publish"

on:
  push:
    branches:
      - dev

env:
  ENVIRONMENT_USER_KEY: ${{secrets.ENVIRONMENT_USER_KEY}}
  FACTIVA_APIKEY: ${{secrets.ENVIRONMENT_USER_KEY}}
  VALID_SNAPSHOT_ID: ${{secrets.VALID_SNAPSHOT_ID}}
  FACTIVA_CLIENT_EMAIL: ${{secrets.FACTIVA_CLIENT_EMAIL}}
  

jobs:
  # linting:
  #   name: RDL linting
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name : Checkout code
  #       uses : actions/checkout@v2

  #     - name: Set up Python
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: 3.9

  #     - name: Install latest pip, setuptools, twine + wheel
  #       run: |
  #         python -m pip install --upgrade pip
      
  #     - name: Install required libraries
  #       run : |
  #         python -m pip install pylama pylint

  #     - name: |
  #         Pylama analysis.
  #         # Flags activated:
  #         #  Ignores:
  #         #   Warnings
  #         #   C0301 : Lines too long
  #         #   E501 : PEP8 Line too long
  #         #   D213 : Conflict with D212 for multiline docstring summary
  #         #   D203 : Conflict with D211 for no blank lines allowed before class docstring
  #         #   D204 : Conflict with D211 for no blank lines allowed before class docstring
  #         #   E0401 : Ignores failed imports.
  #       run :  |
  #          pylama -l "pylint,pycodestyle,pydocstyle" -i "W,C0301,E501,D213,D203,E0401,D204" ./src/

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: 'dev'

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install latest PIP
        run: |
          python -m pip install --upgrade pip

      - name: Install Dependencies
        run: |
          python -m pip install pytest pytest-cov requests pandas numpy google-cloud-core google-cloud-pubsub fastavro unittest2

      - name: Setup the same package
        run: |
          python -m pip install -e .

      # - name: Checkout repository
      #   uses: actions/checkout@v2
          # path: 'main'

      # - name: Directory Listing & copy directories
      #   run: |
      #     cp -R ./main/src/factiva/core ./src/factiva/

      # - name: unittest
      #   run: |
      #     export PYTHONPATH="${PYTHONPATH}:./src/"
      #     python -m unittest test/test_unit_*

      - name: pytest
        run: pytest test/
        # run: |
        #   export PYTHONPATH="${PYTHONPATH}:./src/"
        #   pytest --cov=./src test/
          
  build:
      name: Build & Publish
      runs-on: ubuntu-latest
      needs: [test]
      steps:
        - name : Checkout code
          uses : actions/checkout@v2
          with:
            ref: 'dev'

        - name: Set up Python
          uses: actions/setup-python@v2
          with:
            python-version: '3.9'

        - name: Install latest pip, setuptools, twine + wheel
          run: |
            python -m pip install --upgrade pip setuptools wheel
            
        - name: Build wheels
          run: |
            python setup.py bdist_wheel
            python setup.py sdist
            
        - uses: actions/upload-artifact@v2
          with:
            name: Wheel_library
            path: dist/
            
        - name: Publish package to TestPyPI
          uses: pypa/gh-action-pypi-publish@release/v1
          with:
            user: __token__
            password: ${{ secrets.TEST_PYPI_API_TOKEN }}
            repository_url: https://test.pypi.org/legacy/
            skip_existing: true
